{"ast":null,"code":"import { ADD_EXPENSE_TYPE, GET_EXPENSE_TYPE } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: []\n};\n\nfunction walletReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_EXPENSE_TYPE:\n      return { ...state,\n        expenses: [...state.expenses, {\n          id: state.expenses.length,\n          ...action.value\n        }]\n      };\n\n    case GET_EXPENSE_TYPE:\n      return { ...state,\n        currencies: action.value\n      };\n\n    case DELETE_EXPENSE_TYPE:\n      return { ...state,\n        expenses: [...state.expenses.filter(item => item.id !== target.value)]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default walletReducer;","map":{"version":3,"sources":["/home/cesar/Documentos/Trybe/Projetos para entrega/sd-017-project-trybewallet/src/reducers/wallet.js"],"names":["ADD_EXPENSE_TYPE","GET_EXPENSE_TYPE","INITIAL_STATE","currencies","expenses","walletReducer","state","action","type","id","length","value","DELETE_EXPENSE_TYPE","filter","item","target"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,gBAA3B,QAAmD,YAAnD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAtB;;AAKA,SAASC,aAAT,GAAsD;AAAA,MAA/BC,KAA+B,uEAAvBJ,aAAuB;AAAA,MAARK,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKR,gBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoB;AAAEK,UAAAA,EAAE,EAAEH,KAAK,CAACF,QAAN,CAAeM,MAArB;AAA6B,aAAGH,MAAM,CAACI;AAAvC,SAApB;AAFL,OAAP;;AAKF,SAAKV,gBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACI;AAFd,OAAP;;AAKF,SAAKC,mBAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAN,CAAeS,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACJ,KAAnD,CAAJ;AAFL,OAAP;;AAKF;AACE,aAAOL,KAAP;AApBF;AAsBD;;AAED,eAAeD,aAAf","sourcesContent":["import { ADD_EXPENSE_TYPE, GET_EXPENSE_TYPE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case ADD_EXPENSE_TYPE:\n    return {\n      ...state,\n      expenses: [...state.expenses, { id: state.expenses.length, ...action.value }],\n\n    };\n  case GET_EXPENSE_TYPE:\n    return {\n      ...state,\n      currencies: action.value,\n    };\n\n  case DELETE_EXPENSE_TYPE:\n    return {\n      ...state,\n      expenses: [...state.expenses.filter((item) => item.id !== target.value)],\n    };\n\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}