{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Documentos/Trybe/projetos porfolio/sd-017-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { MIN_CHARACTER, VALIDATE_EMAIL } from '../lib/constants';\nimport { login as loginAction } from '../actions';\nimport '../css/login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        email\n      } = this.state;\n      const {\n        login,\n        history\n      } = this.props;\n      login({\n        email\n      });\n      history.push('/carteira');\n    };\n\n    this.state = {\n      email: '',\n      loginButtonDisabled: true,\n      password: ''\n    };\n  }\n\n  // funcao criada para validar o enable do button\n  changeStateButton() {\n    const {\n      email,\n      password\n    } = this.state;\n    const verifyCharacters = password.length >= MIN_CHARACTER; // referencia para pesquisa: https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\n\n    const verifyEmail = VALIDATE_EMAIL.test(email);\n\n    if (verifyCharacters && verifyEmail) {\n      this.setState({\n        loginButtonDisabled: false\n      });\n    } else {\n      this.setState({\n        loginButtonDisabled: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      loginButtonDisabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"../img/wallet.png\",\n      alt: \"Wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      \"data-testid\": \"email-input\",\n      placeholder: \"Digite seu email\",\n      onChange: e => {\n        this.setState({\n          email: e.target.value\n        });\n        this.changeStateButton();\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      \"data-testid\": \"password-input\",\n      placeholder: \"Digite uma senha\",\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n        this.changeStateButton();\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: loginButtonDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  login: value => dispatch(loginAction(value))\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/cesar/Documentos/Trybe/projetos porfolio/sd-017-project-trybewallet/src/pages/Login.js"],"names":["React","connect","PropTypes","MIN_CHARACTER","VALIDATE_EMAIL","login","loginAction","Login","Component","constructor","props","handleSubmit","e","preventDefault","email","state","history","push","loginButtonDisabled","password","changeStateButton","verifyCharacters","length","verifyEmail","test","setState","render","target","value","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { MIN_CHARACTER, VALIDATE_EMAIL } from '../lib/constants';\nimport { login as loginAction } from '../actions';\nimport '../css/login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      loginButtonDisabled: true,\n      password: '',\n    };\n  }\n\n  handleSubmit =(e) => {\n    e.preventDefault();\n    const { email } = this.state;\n    const { login, history } = this.props;\n    login({ email });\n    history.push('/carteira');\n  }\n\n  // funcao criada para validar o enable do button\n  changeStateButton() {\n    const { email, password } = this.state;\n    const verifyCharacters = password.length >= MIN_CHARACTER;\n\n    // referencia para pesquisa: https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\n    const verifyEmail = VALIDATE_EMAIL.test(email);\n\n    if (verifyCharacters && verifyEmail) {\n      this.setState({ loginButtonDisabled: false });\n    } else {\n      this.setState({ loginButtonDisabled: true });\n    }\n  }\n\n  render() {\n    const { loginButtonDisabled } = this.state;\n    return (\n      <main>\n        <img src=\"../img/wallet.png\" alt=\"Wallet\" />\n        <form onSubmit={ this.handleSubmit }>\n          <input\n            type=\"email\"\n            data-testid=\"email-input\"\n            placeholder=\"Digite seu email\"\n            onChange={ (e) => {\n              this.setState({ email: e.target.value });\n              this.changeStateButton();\n            } }\n            required\n          />\n          <input\n            type=\"password\"\n            data-testid=\"password-input\"\n            placeholder=\"Digite uma senha\"\n            onChange={ (e) => {\n              this.setState({ password: e.target.value });\n              this.changeStateButton();\n            } }\n            required\n          />\n          <button type=\"submit\" disabled={ loginButtonDisabled }>Entrar</button>\n        </form>\n      </main>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (value) => dispatch(loginAction(value)),\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}