{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Documentos/Trybe/Projetos para entrega/sd-017-project-trybewallet/src/components/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // material estudado para split e shift: https://pt.stackoverflow.com/questions/216333/split-regex-apenas-na-primeira-barra-vertical\n\nclass Table extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.deleteItem = e => {\n      console.log('teste');\n    };\n  }\n\n  render() {\n    const {\n      expenses\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, console.log(expenses), expenses.map(element => /*#__PURE__*/React.createElement(\"tr\", {\n      key: expenses.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, element.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, element.tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, element.method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, element.value), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, element.exchangeRates[element.currency].name.split('/').shift()), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, Number(element.exchangeRates[element.currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, element.value), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"delete-btn\",\n      onSubmit: this.deleteItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Deletar\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses\n});\n\nTable.propTypes = {\n  expenses: PropTypes.object\n}.isRequired;\nexport default connect(mapStateToProps)(Table);","map":{"version":3,"sources":["/home/cesar/Documentos/Trybe/Projetos para entrega/sd-017-project-trybewallet/src/components/Table.js"],"names":["React","PropTypes","connect","Table","Component","deleteItem","e","console","log","render","expenses","props","map","element","id","description","tag","method","value","exchangeRates","currency","name","split","shift","Number","ask","toFixed","mapStateToProps","state","wallet","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// material estudado para split e shift: https://pt.stackoverflow.com/questions/216333/split-regex-apenas-na-primeira-barra-vertical\n\nclass Table extends React.Component {\n  deleteItem =(e) => {\n    console.log('teste');\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          {console.log(expenses)}\n          {expenses.map((element) => (\n            <tr key={ expenses.id }>\n              <td>{element.description}</td>\n              <td>{element.tag}</td>\n              <td>{element.method}</td>\n              <td>{element.value}</td>\n              <td>{(element.exchangeRates[element.currency].name).split('/').shift()}</td>\n              <td>{Number(element.exchangeRates[element.currency].ask).toFixed(2)}</td>\n              <td>{element.value}</td>\n              <td>Real</td>\n              <td>\n                <button\n                  type=\"button\"\n                  data-testid=\"delete-btn\"\n                  onSubmit={ this.deleteItem }\n                >\n                  Deletar\n                </button>\n              </td>\n\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nTable.propTypes = {\n  expenses: PropTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}