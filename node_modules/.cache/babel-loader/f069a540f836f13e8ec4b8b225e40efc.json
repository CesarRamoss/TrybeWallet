{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Documentos/Trybe/Projetos para entrega/sd-017-project-trybewallet/src/components/Form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { addItem, getExpenseThunk } from '../actions/index';\nimport { TAG_INITIAL } from '../lib/constants';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        id,\n        value\n      } = target; // condicao para add o value como number do campo input\n\n      if (id === 'value') {\n        this.setState({\n          [id]: Number(value)\n        });\n      } else {\n        this.setState({\n          [id]: value\n        });\n      }\n    };\n\n    this.addRegister = e => {\n      e.preventDefault();\n      const {\n        dispatchSetData\n      } = this.props;\n      dispatchSetData(this.state);\n      this.setState({\n        value: 0,\n        description: '',\n        currency: 'USD',\n        method: 'Dinheiro',\n        tag: TAG_INITIAL\n      });\n    };\n\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: TAG_INITIAL\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatchSetCoins\n    } = this.props;\n    dispatchSetCoins();\n  } // funcao generica para adicionar os dados de input ao estado do componente\n\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"value\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, ' ', \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange,\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, ' ', \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency\",\n      onChange: this.handleChange,\n      value: currencies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, currencies.map(i => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 38\n      }\n    }, i)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, ' ', \"M\\xE9todo de Pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      id: \"method\",\n      onChange: this.handleChange,\n      value: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, ' ', \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"tag\",\n      onChange: this.handleChange,\n      value: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Adicionar Despesa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSetData: value => dispatch(addItem(value)),\n  dispatchSetCoins: value => dispatch(getExpenseThunk(value))\n});\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies\n});\n\nForm.propTypes = {\n  currencies: propTypes.object\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/cesar/Documentos/Trybe/Projetos para entrega/sd-017-project-trybewallet/src/components/Form.js"],"names":["React","connect","propTypes","addItem","getExpenseThunk","TAG_INITIAL","Form","Component","constructor","handleChange","target","id","value","setState","Number","addRegister","e","preventDefault","dispatchSetData","props","state","description","currency","method","tag","componentDidMount","dispatchSetCoins","render","currencies","map","i","mapDispatchToProps","dispatch","mapStateToProps","expenses","wallet","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { addItem, getExpenseThunk } from '../actions/index';\nimport { TAG_INITIAL } from '../lib/constants';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: TAG_INITIAL,\n    };\n  }\n\n  componentDidMount() {\n    const { dispatchSetCoins } = this.props;\n    dispatchSetCoins();\n  }\n\n  // funcao generica para adicionar os dados de input ao estado do componente\n  handleChange = ({ target }) => {\n    const { id, value } = target;\n    // condicao para add o value como number do campo input\n    if (id === 'value') {\n      this.setState({ [id]: Number(value) });\n    } else {\n      this.setState({ [id]: value });\n    }\n  }\n\n  // funcao para adicionar o estado do componente ao global\n  addRegister = (e) => {\n    e.preventDefault();\n    const { dispatchSetData } = this.props;\n    dispatchSetData(this.state);\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: TAG_INITIAL,\n    });\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <form onSubmit={ this.addRegister }>\n        <label htmlFor=\"value\">\n          { }\n          Valor\n          <input\n            type=\"number\"\n            id=\"value\"\n            data-testid=\"value-input\"\n            onChange={ this.handleChange }\n            value={ value }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          { ' ' }\n          Descrição\n          <input\n            type=\"text\"\n            id=\"description\"\n            data-testid=\"description-input\"\n            onChange={ this.handleChange }\n            value={ description }\n          />\n        </label>\n        <label htmlFor=\"wallet\">\n          { ' ' }\n          Moeda\n          <select\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            onChange={ this.handleChange }\n            value={ currencies }\n          >\n            {\n              currencies.map((i) => (<option key={ i } value={ i }>{ i }</option>))\n            }\n          </select>\n        </label>\n        <label htmlFor=\"payment\">\n          { ' ' }\n          Método de Pagamento\n          <select\n            data-testid=\"method-input\"\n            id=\"method\"\n            onChange={ this.handleChange }\n            value={ method }\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          { ' ' }\n          Tag\n          <select\n            data-testid=\"tag-input\"\n            id=\"tag\"\n            onChange={ this.handleChange }\n            value={ tag }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n        <button type=\"submit\">Adicionar Despesa</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSetData: (value) => dispatch(addItem(value)),\n  dispatchSetCoins: (value) => dispatch(getExpenseThunk(value)),\n});\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies,\n});\n\nForm.propTypes = {\n  currencies: propTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}