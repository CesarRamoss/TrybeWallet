{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Documentos/Trybe/Projetos para entrega/sd-017-project-trybewallet/src/components/Form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { addItem, getExpense, getExpenseThunk } from '../actions/index'; // import getCurrentCoins from '../services/walletAPI';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        id,\n        value\n      } = target; // condicao para add o value como number do campo input\n\n      if (id === 'value') {\n        this.setState({\n          [id]: Number(value)\n        });\n      } else {\n        this.setState({\n          [id]: value\n        });\n      }\n    };\n\n    this.addRegister = e => {\n      e.preventDefault();\n      const {\n        dispatchSetData\n      } = this.props;\n      dispatchSetData(this.state); // const soma = expenses.reduce((acumulador, valorAtual) => acumulador + valorAtual.value, totalExpense);\n      // function getTotal(total, item) {\n      //   return (total + item.value);\n      // }\n      // const soma = expenses.reduce(getTotal, 0);\n      // console.log(soma);\n    };\n\n    this.state = {\n      value: 0,\n      description: '',\n      wallet: '',\n      payment: '',\n      tag: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatchSetCoins\n    } = this.props;\n    dispatchSetCoins();\n  } // funcao generica para adicionar os dados de input ao estado do componente\n\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Valor\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"value\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, ' ', \"Descri\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      \"data-testid\": \"description-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, ' ', \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"wallet\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      key: currency,\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }\n    }, currency)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"payment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, ' ', \"M\\xE9todo de Pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      id: \"payment\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de Cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de D\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, ' ', \"Tag\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"tag\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Adicionar Despesa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSetData: value => dispatch(addItem(value)),\n  dispatchSetCoins: value => dispatch(getExpenseThunk(value))\n});\n\nconst mapStateToProps = state => ({\n  totalExpense: state.wallet.totalExpense,\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies\n});\n\nForm.propTypes = {\n  currencies: propTypes.object\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/cesar/Documentos/Trybe/Projetos para entrega/sd-017-project-trybewallet/src/components/Form.js"],"names":["React","connect","propTypes","addItem","getExpense","getExpenseThunk","Form","Component","constructor","handleChange","target","id","value","setState","Number","addRegister","e","preventDefault","dispatchSetData","props","state","description","wallet","payment","tag","componentDidMount","dispatchSetCoins","render","currencies","map","currency","mapDispatchToProps","dispatch","mapStateToProps","totalExpense","expenses","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { addItem, getExpense, getExpenseThunk } from '../actions/index';\n// import getCurrentCoins from '../services/walletAPI';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0,\n      description: '',\n      wallet: '',\n      payment: '',\n      tag: '',\n    };\n  }\n\n  componentDidMount() {\n    const { dispatchSetCoins } = this.props;\n    dispatchSetCoins();\n  }\n\n  // funcao generica para adicionar os dados de input ao estado do componente\n  handleChange = ({ target }) => {\n    const { id, value } = target;\n    // condicao para add o value como number do campo input\n    if (id === 'value') {\n      this.setState({ [id]: Number(value) });\n    } else {\n      this.setState({ [id]: value });\n    }\n  }\n\n  // funcao para adicionar o estado do componente ao global\n  addRegister = (e) => {\n    e.preventDefault();\n    const { dispatchSetData } = this.props;\n    dispatchSetData(this.state);\n    // const soma = expenses.reduce((acumulador, valorAtual) => acumulador + valorAtual.value, totalExpense);\n    // function getTotal(total, item) {\n    //   return (total + item.value);\n    // }\n    // const soma = expenses.reduce(getTotal, 0);\n\n    // console.log(soma);\n  }\n\n  render() {\n    const { currencies } = this.props;\n    return (\n      <form onSubmit={ this.addRegister }>\n        <label htmlFor=\"value\">\n          { }\n          Valor\n          <input type=\"number\" id=\"value\" data-testid=\"value-input\" onChange={ this.handleChange } />\n        </label>\n        <label htmlFor=\"description\">\n          { ' ' }\n          Descrição\n          <input type=\"text\" id=\"description\" data-testid=\"description-input\" onChange={ this.handleChange } />\n        </label>\n        <label htmlFor=\"wallet\">\n          { ' ' }\n          Moeda\n          <select data-testid=\"currency-input\" id=\"wallet\" onChange={ this.handleChange }>\n            {\n              currencies.map((currency) => (<option key={ currency } value={ currency }>{currency}</option>))\n            }\n          </select>\n        </label>\n        <label htmlFor=\"payment\">\n          { ' ' }\n          Método de Pagamento\n          <select data-testid=\"method-input\" id=\"payment\" onChange={ this.handleChange }>\n            <option>Dinheiro</option>\n            <option>Cartão de Crédito</option>\n            <option>Cartão de Débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          { ' ' }\n          Tag\n          <select data-testid=\"tag-input\" id=\"tag\" onChange={ this.handleChange }>\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n        <button type=\"submit\">Adicionar Despesa</button>\n\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSetData: (value) => dispatch(addItem(value)),\n  dispatchSetCoins: (value) => dispatch(getExpenseThunk(value)),\n});\n\nconst mapStateToProps = (state) => ({\n  totalExpense: state.wallet.totalExpense,\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies,\n});\n\nForm.propTypes = {\n  currencies: propTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}