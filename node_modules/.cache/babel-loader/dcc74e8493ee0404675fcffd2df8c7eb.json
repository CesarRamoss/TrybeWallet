{"ast":null,"code":"import _defineProperty from\"/home/cesar/Documentos/Trybe/projetos porfolio/trybewallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/cesar/Documentos/Trybe/projetos porfolio/trybewallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/cesar/Documentos/Trybe/projetos porfolio/trybewallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/cesar/Documentos/Trybe/projetos porfolio/trybewallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/cesar/Documentos/Trybe/projetos porfolio/trybewallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{addItem,getExpenseThunk}from'../actions/index';import{TAG_INITIAL}from'../lib/constants';var Form=/*#__PURE__*/function(_React$Component){_inherits(Form,_React$Component);var _super=_createSuper(Form);function Form(){var _this;_classCallCheck(this,Form);_this=_super.call(this);_this.handleChange=function(_ref){var target=_ref.target;var id=target.id,value=target.value;_this.setState(_defineProperty({},id,value));};_this.addRegister=function(e){e.preventDefault();var dispatchSetData=_this.props.dispatchSetData;dispatchSetData(_this.state);_this.setState({value:0,description:'',currency:'USD',method:'Dinheiro',tag:TAG_INITIAL});};_this.state={value:0,description:'',currency:'USD',method:'Dinheiro',tag:TAG_INITIAL};return _this;}_createClass(Form,[{key:\"componentDidMount\",value:function componentDidMount(){var dispatchSetCoins=this.props.dispatchSetCoins;dispatchSetCoins();}// funcao generica para adicionar os dados de input ao estado do componente\n},{key:\"render\",value:function render(){var currencies=this.props.currencies;var _this$state=this.state,value=_this$state.value,description=_this$state.description,currency=_this$state.currency,method=_this$state.method,tag=_this$state.tag;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.addRegister},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"value\"},\"Valor\",/*#__PURE__*/React.createElement(\"input\",{type:\"number\",id:\"value\",\"data-testid\":\"value-input\",onChange:this.handleChange,value:value})),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"description\"},' ',\"Descri\\xE7\\xE3o\",/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"description\",\"data-testid\":\"description-input\",onChange:this.handleChange,value:description})),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"currency\"},' ',\"Moeda\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"currency-input\",id:\"currency\",onChange:this.handleChange,value:currency},currencies.map(function(i){return/*#__PURE__*/React.createElement(\"option\",{key:i,value:i},i);}))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"method\"},' ',\"M\\xE9todo de Pagamento\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"method-input\",id:\"method\",onChange:this.handleChange,value:method},/*#__PURE__*/React.createElement(\"option\",null,\"Dinheiro\"),/*#__PURE__*/React.createElement(\"option\",null,\"Cart\\xE3o de cr\\xE9dito\"),/*#__PURE__*/React.createElement(\"option\",null,\"Cart\\xE3o de d\\xE9bito\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"tag\"},' ',\"Tag\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"tag-input\",id:\"tag\",onChange:this.handleChange,value:tag},/*#__PURE__*/React.createElement(\"option\",null,\"Alimenta\\xE7\\xE3o\"),/*#__PURE__*/React.createElement(\"option\",null,\"Lazer\"),/*#__PURE__*/React.createElement(\"option\",null,\"Trabalho\"),/*#__PURE__*/React.createElement(\"option\",null,\"Transporte\"),/*#__PURE__*/React.createElement(\"option\",null,\"Sa\\xFAde\"))),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Adicionar\"));}}]);return Form;}(React.Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{dispatchSetData:function dispatchSetData(value){return dispatch(addItem(value));},dispatchSetCoins:function dispatchSetCoins(value){return dispatch(getExpenseThunk(value));}};};var mapStateToProps=function mapStateToProps(state){return{expenses:state.wallet.expenses,currencies:state.wallet.currencies};};export default connect(mapStateToProps,mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/cesar/Documentos/Trybe/projetos porfolio/trybewallet/src/components/Form.js"],"names":["React","connect","addItem","getExpenseThunk","TAG_INITIAL","Form","handleChange","target","id","value","setState","addRegister","e","preventDefault","dispatchSetData","props","state","description","currency","method","tag","dispatchSetCoins","currencies","map","i","Component","mapDispatchToProps","dispatch","mapStateToProps","expenses","wallet"],"mappings":"u2BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,OAAT,CAAkBC,eAAlB,KAAyC,kBAAzC,CACA,OAASC,WAAT,KAA4B,kBAA5B,C,GAEMC,CAAAA,I,wGACJ,eAAc,sCACZ,wBADY,MAiBdC,YAjBc,CAiBC,cAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CAC7B,GAAQC,CAAAA,EAAR,CAAsBD,MAAtB,CAAQC,EAAR,CAAYC,KAAZ,CAAsBF,MAAtB,CAAYE,KAAZ,CAEA,MAAKC,QAAL,oBAAiBF,EAAjB,CAAsBC,KAAtB,GACD,CArBa,OAwBdE,WAxBc,CAwBA,SAACC,CAAD,CAAO,CACnBA,CAAC,CAACC,cAAF,GACA,GAAQC,CAAAA,eAAR,CAA4B,MAAKC,KAAjC,CAAQD,eAAR,CACAA,eAAe,CAAC,MAAKE,KAAN,CAAf,CACA,MAAKN,QAAL,CAAc,CACZD,KAAK,CAAE,CADK,CAEZQ,WAAW,CAAE,EAFD,CAGZC,QAAQ,CAAE,KAHE,CAIZC,MAAM,CAAE,UAJI,CAKZC,GAAG,CAAEhB,WALO,CAAd,EAOD,CAnCa,CAEZ,MAAKY,KAAL,CAAa,CACXP,KAAK,CAAE,CADI,CAEXQ,WAAW,CAAE,EAFF,CAGXC,QAAQ,CAAE,KAHC,CAIXC,MAAM,CAAE,UAJG,CAKXC,GAAG,CAAEhB,WALM,CAAb,CAFY,aASb,C,kDAED,4BAAoB,CAClB,GAAQiB,CAAAA,gBAAR,CAA6B,KAAKN,KAAlC,CAAQM,gBAAR,CACAA,gBAAgB,GACjB,CAED;sBAqBA,iBAAS,CACP,GAAQC,CAAAA,UAAR,CAAuB,KAAKP,KAA5B,CAAQO,UAAR,CACA,gBAAsD,KAAKN,KAA3D,CAAQP,KAAR,aAAQA,KAAR,CAAeQ,WAAf,aAAeA,WAAf,CAA4BC,QAA5B,aAA4BA,QAA5B,CAAsCC,MAAtC,aAAsCA,MAAtC,CAA8CC,GAA9C,aAA8CA,GAA9C,CACA,mBACE,4BAAM,QAAQ,CAAG,KAAKT,WAAtB,eACE,6BAAO,OAAO,CAAC,OAAf,uBAGE,6BACE,IAAI,CAAC,QADP,CAEE,EAAE,CAAC,OAFL,CAGE,cAAY,aAHd,CAIE,QAAQ,CAAG,KAAKL,YAJlB,CAKE,KAAK,CAAGG,KALV,EAHF,CADF,cAYE,6BAAO,OAAO,CAAC,aAAf,EACI,GADJ,gCAGE,6BACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,aAFL,CAGE,cAAY,mBAHd,CAIE,QAAQ,CAAG,KAAKH,YAJlB,CAKE,KAAK,CAAGW,WALV,EAHF,CAZF,cAuBE,6BAAO,OAAO,CAAC,UAAf,EACI,GADJ,sBAGE,8BACE,cAAY,gBADd,CAEE,EAAE,CAAC,UAFL,CAGE,QAAQ,CAAG,KAAKX,YAHlB,CAIE,KAAK,CAAGY,QAJV,EAOII,UAAU,CAACC,GAAX,CAAe,SAACC,CAAD,qBAAQ,8BAAQ,GAAG,CAAGA,CAAd,CAAkB,KAAK,CAAGA,CAA1B,EAAgCA,CAAhC,CAAR,EAAf,CAPJ,CAHF,CAvBF,cAqCE,6BAAO,OAAO,CAAC,QAAf,EACI,GADJ,uCAGE,8BACE,cAAY,cADd,CAEE,EAAE,CAAC,QAFL,CAGE,QAAQ,CAAG,KAAKlB,YAHlB,CAIE,KAAK,CAAGa,MAJV,eAME,6CANF,cAOE,4DAPF,cAQE,2DARF,CAHF,CArCF,cAmDE,6BAAO,OAAO,CAAC,KAAf,EACI,GADJ,oBAGE,8BACE,cAAY,WADd,CAEE,EAAE,CAAC,KAFL,CAGE,QAAQ,CAAG,KAAKb,YAHlB,CAIE,KAAK,CAAGc,GAJV,eAME,sDANF,cAOE,0CAPF,cAQE,6CARF,cASE,+CATF,cAUE,6CAVF,CAHF,CAnDF,cAmEE,8BAAQ,IAAI,CAAC,QAAb,cAnEF,CADF,CAuED,C,kBAhHgBpB,KAAK,CAACyB,S,EAmHzB,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCb,eAAe,CAAE,yBAACL,KAAD,QAAWkB,CAAAA,QAAQ,CAACzB,OAAO,CAACO,KAAD,CAAR,CAAnB,EADuB,CAExCY,gBAAgB,CAAE,0BAACZ,KAAD,QAAWkB,CAAAA,QAAQ,CAACxB,eAAe,CAACM,KAAD,CAAhB,CAAnB,EAFsB,CAAf,EAA3B,CAKA,GAAMmB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACZ,KAAD,QAAY,CAClCa,QAAQ,CAAEb,KAAK,CAACc,MAAN,CAAaD,QADW,CAElCP,UAAU,CAAEN,KAAK,CAACc,MAAN,CAAaR,UAFS,CAAZ,EAAxB,CASA,cAAerB,CAAAA,OAAO,CAAC2B,eAAD,CAAkBF,kBAAlB,CAAP,CAA6CrB,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { addItem, getExpenseThunk } from '../actions/index';\nimport { TAG_INITIAL } from '../lib/constants';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: TAG_INITIAL,\n    };\n  }\n\n  componentDidMount() {\n    const { dispatchSetCoins } = this.props;\n    dispatchSetCoins();\n  }\n\n  // funcao generica para adicionar os dados de input ao estado do componente\n  handleChange = ({ target }) => {\n    const { id, value } = target;\n\n    this.setState({ [id]: value });\n  }\n\n  // funcao para adicionar o estado do componente ao global\n  addRegister = (e) => {\n    e.preventDefault();\n    const { dispatchSetData } = this.props;\n    dispatchSetData(this.state);\n    this.setState({\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: TAG_INITIAL,\n    });\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <form onSubmit={ this.addRegister }>\n        <label htmlFor=\"value\">\n          { }\n          Valor\n          <input\n            type=\"number\"\n            id=\"value\"\n            data-testid=\"value-input\"\n            onChange={ this.handleChange }\n            value={ value }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          { ' ' }\n          Descrição\n          <input\n            type=\"text\"\n            id=\"description\"\n            data-testid=\"description-input\"\n            onChange={ this.handleChange }\n            value={ description }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          { ' ' }\n          Moeda\n          <select\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            onChange={ this.handleChange }\n            value={ currency }\n          >\n            {\n              currencies.map((i) => (<option key={ i } value={ i }>{ i }</option>))\n            }\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          { ' ' }\n          Método de Pagamento\n          <select\n            data-testid=\"method-input\"\n            id=\"method\"\n            onChange={ this.handleChange }\n            value={ method }\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          { ' ' }\n          Tag\n          <select\n            data-testid=\"tag-input\"\n            id=\"tag\"\n            onChange={ this.handleChange }\n            value={ tag }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n        <button type=\"submit\">Adicionar</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSetData: (value) => dispatch(addItem(value)),\n  dispatchSetCoins: (value) => dispatch(getExpenseThunk(value)),\n});\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies,\n});\n\nForm.propTypes = {\n  currencies: propTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}